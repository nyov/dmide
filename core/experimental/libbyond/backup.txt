import wx
import dmf

import wx.lib.buttons as buttons


background_type = 1 #1: dots, 2: lines
back_type_width = 8
back_type_height = 8
back_type_colour = wx.Colour(0, 0, 0)


class Window(wx.Frame):
	def __init__(self):
		wx.Frame.__init__(self, None, wx.ID_ANY, 'Interface Editor', style = wx.DEFAULT_FRAME_STYLE | wx.FULL_REPAINT_ON_RESIZE)

		self.ctrls = []
		self.load_dmf('default.dmf')
		self.Bind(wx.EVT_PAINT, self.on_paint)


	def load_dmf(self, path):
		self.window = [x for x in dmf.DMFREAD(path) if isinstance(x, dmf.DMFWindowGroup) and x.name == 'about'][0]

		for widget in self.window.windows:
			self.load_widget(widget)

	def on_paint(self, event):
		event.Skip()

		dc = wx.PaintDC(self)

		dc.SetPen(wx.Pen(back_type_colour))

		w, h = self.GetClientSize()

		if background_type == 1:
			for x in xrange(0, w, back_type_width):
				for y in xrange(0, h, back_type_height):
					dc.DrawPoint(x, y)

		elif background_type == 2:
			for x in xrange(0, w, back_type_width):
				dc.DrawLine(x, 0, x, h)
			for y in xrange(0, h, back_type_height):
				dc.DrawLine(0, y, w, y)


	def load_widget(self, widget):

		if widget.type == 'MAIN':
			self.SetClientSize(widget.size)
			self.SetBackgroundColour(widget.background_color)
			if widget.statusbar:
				self.CreateStatusBar()

			return

		ctrl = None
		styles = 0

		if widget.border:
			styles = {'none': wx.NO_BORDER, 'line': wx.SIMPLE_BORDER, 'sunken': wx.SUNKEN_BORDER}[widget.border]

		try:
			align_styles = widget.align.split('-')
			if 'left' in align_styles:
				styles |= wx.ALIGN_LEFT
			if 'right' in align_styles:
				styles |= wx.ALIGN_RIGHT
			if 'top' in align_styles:
				styles |= wx.ALIGN_TOP
			if 'bottom' in align_styles:
				styles |= wx.ALIGN_BOTTOM
			if 'center' in align_styles:
				styles |= wx.ALIGN_CENTER
		except AttributeError:
			pass


		if widget.type == 'LABEL':
			ctrl = wx.StaticText(self, wx.ID_ANY, widget.text.replace('\\"', '"'), style = styles)

		elif widget.type == 'BUTTON':
			if widget.button_type == 'radio':
				ctrl = wx.RadioButton(self, wx.ID_ANY, widget.text, style = styles)
			elif widget.button_type == 'checkbox':
				ctrl = wx.CheckBox(self, wx.ID_ANY, widget.text, style = styles)
			else:
				ctrl = buttons.GenButton(self, wx.ID_ANY, widget.text, style = styles)

		elif widget.type == 'CHILD':
			ctrl = wx.Panel(self, wx.ID_ANY, style = styles)

		elif widget.type == 'BROWSER':
			ctrl = wx.Panel(self, wx.ID_ANY, style = styles)

		elif widget.type == 'INPUT':
			ctrl = wx.TextCtrl(self, wx.ID_ANY, widget.command, style = styles)

		elif widget.type == 'OUTPUT':
			ctrl = wx.TextCtrl(self, wx.ID_ANY, style = styles)

		else:
			return

		ctrl.SetPosition(widget.pos)
		ctrl.SetBackgroundColour(widget.background_color)
		ctrl.SetForegroundColour(widget.text_color)

		font_size, font_family = 9, u'MS Sans Serif'
		if widget.font_size:
			font_size = widget.font_size
		if widget.font_family:
			font_family = widget.font_family
		font = wx.Font(font_size, wx.DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, False, font_family)
		ctrl.SetFont(font)

		ctrl.SetSize(widget.size)

		ctrl.__dmide_ctrl = widget


class Widget(wx.Panel):
	def __init__(self, parent):
		wx.Panel.__init__(self, parent)

	


if __name__ == '__main__':
	a = wx.App(0)
	w = Window()
	w.Show(True)
	a.MainLoop()